const Discord = require("discord.js");
const MembersGuild = require("./MembersGuilds.js");
const Comments = require("./Comments.js");
const { cp } = require("fs");
// D√©finition de la fonction ListRole
async function ListRole(message) {
  // R√©cup√©ration du serveur
  const server = message.guild;

  // V√©rification que le message a √©t√© envoy√© dans un serveur
  if (!server) {
    message.channel.send(
      "Cette commande ne peut √™tre utilis√©e que dans un serveur."
    );
    return;
  }

  // R√©cup√©ration des r√¥les du serveur
  const roles = server.roles.cache.filter(
    (role) => !role.managed && role.name !== "@everyone"
  );

  // Parcours des r√¥les
  roles.forEach((role, index) => {
    // Cr√©ation d'un message pour chaque r√¥le
    const roleMessage = `Role: **${role.name}** `;
    const color = role.hexColor;

    // Envoi du message et ajout de la r√©action pouce lev√©e
    message.channel
      .send({ content: roleMessage, allowedMentions: { repliedUser: false } })
      .then(async (sentMessage) => {
        await sentMessage.react("üëç");

        // Filtre pour r√©cup√©rer les r√©actions du membre non-bot
        const filter = (reaction, user) => !user.bot;

        // Cr√©ation du collecteur de r√©actions
        const collector = sentMessage.createReactionCollector(filter, {
          time: 300000,
        }); // 5 minutes

        // R√©action √† une nouvelle r√©action
        collector.on("collect", (reaction, user) => {
          // V√©rification que la r√©action est une pouce lev√©e
          if (reaction.emoji.name === "üëç") {
            // R√©cup√©ration du r√¥le correspondant √† la r√©action
            const selectedRole = roles.find((r) => r.name === role.name);
            const roleName = selectedRole.name;
            // Affichage du message de s√©lection
            message.channel.send(`Selection du r√¥le: **${selectedRole.name}**`);
            console.log("Appel a la fonction ListOfMemberByRole");
            MembersGuild.ListOfMembersByRole(message, roleName);
          }
        });

        // R√©action √† la fin du temps imparti
        collector.on("end", (collected) => {
          // Suppression des messages
          message.delete();
          collected.forEach((reaction) => reaction.message.delete());
        });
      })
      .catch(console.error);
  });
}

module.exports = {
  ListRole,
};

/*Dans ce code, nous avons ajout√© une √©tape de filtrage pour exclure le r√¥le @everyone de la liste des r√¥les. 
Ensuite, nous avons ajout√© une condition qui v√©rifie si la liste filtr√©e n'est pas vide avant d'envoyer le message.
 Si la liste est vide, le bot envoie un message indiquant qu'il n'y a aucun r√¥le √† afficher.*/
